<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - GYMappWeb</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/GYMappWeb.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/themes/dark.css">
    <link href="~/vendor/fontawesome-free/css/all.min.css" rel="stylesheet">
    <style>
        /* Animation Styles */
        .animate-container {
            opacity: 0;
            animation: fadeIn 0.5s ease-out forwards;
        }

        .animate-card {
            opacity: 0;
            transform: translateY(30px);
            transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

            .animate-card.animated {
                opacity: 1;
                transform: translateY(0);
            }

        .delay-1 {
            transition-delay: 0.1s;
        }

        .delay-2 {
            transition-delay: 0.2s;
        }

        .delay-3 {
            transition-delay: 0.3s;
        }

        .delay-4 {
            transition-delay: 0.4s;
        }

        .delay-5 {
            transition-delay: 0.5s;
        }

        @@keyframes fadeIn {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }

        /* Language Toggle Button Styles */
        .lang-toggle-container {
            position: relative;
            width: 60px;
            height: 30px;
            margin-right: 15px;
        }

        .lang-btn {
            position: absolute;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 15px;
            color: white;
            font-weight: bold;
            cursor: pointer;
            transition: transform 0.4s ease, z-index 0.4s ease;
            backface-visibility: hidden;
            border: none;
            font-size: 0.9rem;
        }

        /* AR button is in front */
        .lang-btn-ar {
            background: linear-gradient(45deg, #b21f1f, #fdbb2d);
            transform: perspective(200px) rotateY(0deg);
            z-index: 2;
        }

        /* EN button is behind */
        .lang-btn-en {
            background: linear-gradient(45deg, #1a2a6c, #2a5298);
            transform: perspective(200px) rotateY(180deg);
            z-index: 1;
        }

        .lang-btn-flipped {
            transform: perspective(200px) rotateY(180deg);
            z-index: 1;
        }

        .lang-btn-unflipped {
            transform: perspective(200px) rotateY(0deg);
            z-index: 2;
        }

        /* Center the navigation items */
        .navbar-nav.flex-grow-1 {
            display: flex;
            justify-content: center;
            width: 100%;
        }

        /* Gold hover effects for nav items */
        .navbar-nav.flex-grow-1 .nav-link {
            position: relative;
            transition: all 0.3s ease;
            color: white !important;
        }

        /* Ensure navbar maintains normal height */
        nav.navbar {
            min-height: 56px !important;
            padding-top: 0 !important;
            padding-bottom: 0 !important;
        }

        .navbar-nav.flex-grow-1 .nav-link:hover {
            color: #FFD700 !important;
            transform: translateY(-1px);
        }

        .navbar-nav.flex-grow-1 .nav-link::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: 0;
            left: 50%;
            background: linear-gradient(90deg, transparent, #FFD700, transparent);
            transition: all 0.3s ease;
        }

        .navbar-nav.flex-grow-1 .nav-link:hover::after {
            width: 100%;
            left: 0;
        }

        /* Style for the login partial to display Hello and username side by side */
        .navbar-nav.align-items-center .nav-item:last-child .nav-link {
            display: flex;
            align-items: center;
            flex-direction: row;
            padding: 0.5rem 0.8rem;
        }

        .hello-text {
            margin-right: 0.5rem;
            color: white;
        }

        .username-text {
            color: #FFD700;
            font-weight: bold;
        }

        /* Language toggle hover effects */
        .lang-btn:hover {
            transform: perspective(200px) rotateY(0deg) scale(1.08) !important;
            box-shadow: 0 0 8px rgba(255, 215, 0, 0.6);
        }

        /* Responsive adjustments */
        @@media (max-width: 991.98px) {
            .navbar-nav.flex-grow-1 {
                text-align: center;
            }
            
            .navbar-nav.align-items-center .nav-item:last-child .nav-link {
                flex-direction: column;
                text-align: center;
            }
            
            .hello-text {
                margin-right: 0;
                margin-bottom: 0.3rem;
            }
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow">
            <div class="container-fluid">
                @* <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index" data-en="GYMappWeb" data-ar="GYMappWeb">GYMappWeb</a> *@
                <partial name="_LoginPartial" />
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        @if (User.IsInRole("Captain") || User.IsInRole("Developer"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index" data-en="Home" data-ar="الرئيسية">Home</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="TblUsers" asp-action="Index" data-en="Users" data-ar="المستخدمين">Users</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="TblUserMemberShips" asp-action="Index" data-en="UserMemberShips" data-ar="اشتراكات المستخدمين">UserMemberShips</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="TblMembershipTypes" asp-action="Index" data-en="MembershipTypes" data-ar="أنواع الاشتراكات">MembershipTypes</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="TblMemberShipFreezes" asp-action="Index" data-en="MemberShipFreezes" data-ar="تجميد الاشتراكات">MemberShipFreezes</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="TblOffers" asp-action="Index" data-en="Offers" data-ar="العروض">Offers</a>
                            </li>
                        }
                        @if (User.IsInRole("Developer"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Roles" asp-action="Index">Roles</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="UserRoles" asp-action="Index">UserRoles</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
                            </li>
                        }
                    </ul>
                    <ul class="navbar-nav align-items-center">
                        <!-- Language Toggle -->
                        <li class="nav-item">
                            <div class="lang-toggle-container">
                                <button class="lang-btn lang-btn-ar" id="lang-btn-ar">AR</button>
                                <button class="lang-btn lang-btn-en" id="lang-btn-en">EN</button>
                            </div>
                        </li>
                        <!-- Login Partial -->
                        <li class="nav-item">
                           
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="animate-container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    @*  <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - GYMappWeb - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer> *@

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
    <partial name="_Animations" />

    <script>
        // Language toggle functionality
        const langBtnEn = document.getElementById('lang-btn-en');
        const langBtnAr = document.getElementById('lang-btn-ar');

        // Get initial language from cookie or default to 'ar'
        let currentLanguage = localStorage.getItem('preferredLanguage') ||
                             (document.cookie.match(/preferredLanguage=([^;]+)/) ?
                              document.cookie.match(/preferredLanguage=([^;]+)/)[1] : 'ar');

        // Initialize button states based on current language
        function initializeButtonStates() {
            if (currentLanguage === 'en') {
                langBtnEn.classList.add('lang-btn-unflipped');
                langBtnEn.classList.remove('lang-btn-flipped');
                langBtnAr.classList.add('lang-btn-flipped');
                langBtnAr.classList.remove('lang-btn-unflipped');
            } else {
                langBtnAr.classList.add('lang-btn-unflipped');
                langBtnAr.classList.remove('lang-btn-flipped');
                langBtnEn.classList.add('lang-btn-flipped');
                langBtnEn.classList.remove('lang-btn-unflipped');
            }
        }

        function toggleLanguage() {
            // Toggle language
            currentLanguage = currentLanguage === 'en' ? 'ar' : 'en';

            // Update button states
            langBtnEn.classList.toggle('lang-btn-flipped');
            langBtnEn.classList.toggle('lang-btn-unflipped');
            langBtnAr.classList.toggle('lang-btn-flipped');
            langBtnAr.classList.toggle('lang-btn-unflipped');

            // Update the UI language
            setLanguage(currentLanguage);

            // Set the language cookie or localStorage
            document.cookie = `preferredLanguage=${currentLanguage};path=/;max-age=31536000`;
            localStorage.setItem('preferredLanguage', currentLanguage);

            console.log('Language changed to: ' + currentLanguage);
        }

        function setLanguage(lang) {
            // Update page title if available
            const titleElement = document.querySelector('title');
            if (titleElement) {
                const newTitle = titleElement.getAttribute(`data-${lang}`) || titleElement.textContent;
                titleElement.textContent = newTitle;
            }

            // Update all elements with data attributes for translation
            document.querySelectorAll('[data-en], [data-ar]').forEach(element => {
                if (element.getAttribute(`data-${lang}`)) {
                    element.textContent = element.getAttribute(`data-${lang}`);
                }
            });
        }

        // Initialize the page with the correct language
        function initializeLanguage() {
            initializeButtonStates();
            setLanguage(currentLanguage);
        }

        langBtnEn.addEventListener('click', toggleLanguage);
        langBtnAr.addEventListener('click', toggleLanguage);

        // Initialize language when page loads
        document.addEventListener('DOMContentLoaded', initializeLanguage);
    </script>
</body>
</html>